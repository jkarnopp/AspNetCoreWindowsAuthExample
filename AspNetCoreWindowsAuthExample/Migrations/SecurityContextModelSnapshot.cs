// <auto-generated />
using System;
using AspNetCoreWindowsAuthExample.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCoreWindowsAuthExample.Migrations
{
    [DbContext(typeof(SecurityContext))]
    partial class SecurityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreWindowsAuthExample.Models.SysConfig", b =>
                {
                    b.Property<int>("SysConfigId");

                    b.Property<string>("AppFolder");

                    b.Property<string>("AppFromEmail");

                    b.Property<string>("AppFromName");

                    b.Property<string>("AppName");

                    b.Property<string>("BusinessOwnerEmail");

                    b.Property<string>("BusinessOwnerName");

                    b.Property<string>("DeveloperEmail");

                    b.Property<string>("DeveloperName");

                    b.Property<string>("Rebuild");

                    b.Property<int?>("SmtpPort");

                    b.Property<string>("SmtpServer");

                    b.Property<string>("UserAdministratorEmail");

                    b.Property<string>("UserAdministratorName");

                    b.HasKey("SysConfigId");

                    b.ToTable("SysConfigs");

                    b.HasData(
                        new { SysConfigId = 1, AppFolder = "AspNetCoreWindowsAuthExample", AppFromEmail = "example@noReply.kartech.com", AppFromName = "Example Application", AppName = "AspNetCoreWindowsAuthExample", BusinessOwnerEmail = "jim@kartech.com", BusinessOwnerName = "Jim Karnopp", DeveloperEmail = "jim@kartech.com", DeveloperName = "Jim Karnopp", Rebuild = "False", SmtpPort = 25, SmtpServer = "smtp.MailServer.com" }
                    );
                });

            modelBuilder.Entity("AspNetCoreWindowsAuthExample.Models.UserInformation", b =>
                {
                    b.Property<int>("UserInformationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Enabled");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LanId")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserInformationId");

                    b.ToTable("UserInformations");

                    b.HasData(
                        new { UserInformationId = 1, Email = "jim@kartech.com", Enabled = true, FirstName = "Jim", LanId = "na\\karnopp", LastName = "Karnopp" }
                    );
                });

            modelBuilder.Entity("AspNetCoreWindowsAuthExample.Models.UserInformationUserRole", b =>
                {
                    b.Property<int>("UserInformationId");

                    b.Property<int>("UserRoleId");

                    b.HasKey("UserInformationId", "UserRoleId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserInformationUserRoles");

                    b.HasData(
                        new { UserInformationId = 1, UserRoleId = 1 }
                    );
                });

            modelBuilder.Entity("AspNetCoreWindowsAuthExample.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(25);

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { UserRoleId = 1, Description = "Users with admin access", Name = "Administrator" },
                        new { UserRoleId = 2, Description = "Users with base level Access", Name = "User" }
                    );
                });

            modelBuilder.Entity("AspNetCoreWindowsAuthExample.Models.UserInformationUserRole", b =>
                {
                    b.HasOne("AspNetCoreWindowsAuthExample.Models.UserInformation", "UserInformation")
                        .WithMany("UserInformationUserRoles")
                        .HasForeignKey("UserInformationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreWindowsAuthExample.Models.UserRole", "UserRole")
                        .WithMany("UserInformationUserRoles")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
